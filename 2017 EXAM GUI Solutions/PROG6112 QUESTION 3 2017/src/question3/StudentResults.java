/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package question3;

import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;

/**
 *
 * @author programmer
 */
public class StudentResults extends javax.swing.JFrame {    
    ArrayList <Integer> studNums = new ArrayList<Integer>(); // arrayList to store student numbers
    ArrayList <Integer> testMarks = new ArrayList<Integer>();// arrayList to store test marks
    ArrayList <Integer> assignMarks = new ArrayList<Integer>();// arrayList to store assignment marks
    ArrayList <Integer> examMarks = new ArrayList<Integer>();// arrayList to store exam marks
    /**
     * Creates new form StudentResults
     */
    public StudentResults() throws FileNotFoundException, IOException {
         
        initComponents();
        int studentNum,test, assignment, exam;
        
        File file = new File("C:\\Users\\programmer\\Desktop\\VARSITY COLLEGE\\2018\\SEMESTER 2\\MODULES\\Programming 1B (PROG6112)\\PAST ASSESSMENTS\\2017\\students.txt");
        FileReader fr = new FileReader(file);
        BufferedReader br = new BufferedReader(fr);
        String line = br.readLine();
        while (line!=null){ // check if the line read is not empty
            studentNum = Integer.parseInt(line); //read student number from file as a string and convert it to an integer
            studentNum = Integer.valueOf(line);
            test = Integer.valueOf(br.readLine().trim());//Integer.parseInt(br.readLine());// read test value in the next line and convert it to an integer
            assignment= Integer.valueOf(br.readLine().trim());//Integer.parseInt(br.readLine());// read the assignment mark in the next line and convert it to an integer
            exam = Integer.valueOf(br.readLine().trim());//Integer.parseInt(br.readLine());// read the exam mark in the next line and convert it to an integer
            studNums.add(studentNum); //add studentnumber to the studNums arraylist
            testMarks.add(test);// add test mark to the testMarks arraylist
            assignMarks.add(assignment); // add the assignment mark to the assignMarks arraylist
            examMarks.add(exam); // add the exam mark to the examMarks arrayList
            line = br.readLine(); // read the line after the exam mark i.e. the next student number
        }
        //add all student numbers in the arraylist to the model
        DefaultListModel model = new DefaultListModel();
        for(int stNum: studNums) {
            model.addElement(stNum);
            cboStudentNum.addItem(stNum); //add student numbers from the studNums arraylist to the combobox
        }
        //set the model for the listbox
        lstStudentNum.setModel(model);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstStudentNum = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        lblTest = new javax.swing.JLabel();
        lblAssign = new javax.swing.JLabel();
        lblExam = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblAvMark = new javax.swing.JLabel();
        lblHighMark = new javax.swing.JLabel();
        lblLowMark = new javax.swing.JLabel();
        cboStudentNum = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        rbtnOne = new javax.swing.JRadioButton();
        rbtnTwo = new javax.swing.JRadioButton();
        rbtnThree = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem3.setText("jMenuItem3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstStudentNum.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jScrollPane1.setViewportView(lstStudentNum);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel1.setText("Select Student");

        btnSearch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblTest.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblTest.setBorder(javax.swing.BorderFactory.createTitledBorder("Test"));

        lblAssign.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblAssign.setBorder(javax.swing.BorderFactory.createTitledBorder("Assignment"));

        lblExam.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblExam.setBorder(javax.swing.BorderFactory.createTitledBorder("Exam"));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel2.setText("Average Result : ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel3.setText("Highest Result  :");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        jLabel4.setText("Lowest Result   :");

        lblAvMark.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblAvMark.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblHighMark.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblHighMark.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblLowMark.setFont(new java.awt.Font("Times New Roman", 1, 11)); // NOI18N
        lblLowMark.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel5.setText("Select Student Number");

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnOne);
        rbtnOne.setText("10111");

        buttonGroup1.add(rbtnTwo);
        rbtnTwo.setText("10112");

        buttonGroup1.add(rbtnThree);
        rbtnThree.setText("10113");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel6.setText("Select Student Number");

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenu3.setText("Select Student Number");

        jMenuItem2.setText("10111");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem2);

        jMenuItem4.setText("10112");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("10113");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboStudentNum, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(22, 22, 22)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbtnThree)
                                    .addComponent(rbtnOne)
                                    .addComponent(rbtnTwo)
                                    .addComponent(jButton2)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblTest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblAssign, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblExam, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(46, 46, 46)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)
                                            .addComponent(lblLowMark, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabel3)
                                                .addComponent(jLabel2))
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblHighMark, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblAvMark, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTest, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblAvMark, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblAssign, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblHighMark, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblExam, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cboStudentNum, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(4, 4, 4))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblLowMark, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(44, 44, 44)
                                .addComponent(rbtnOne)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnTwo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnThree)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addGap(62, 62, 62))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        int index = lstStudentNum.getSelectedIndex(); //get the index number of the selected element in the list
        lblTest.setText(testMarks.get(index).toString()); //set value of label lblTest to be the element from testMarks arraylist with the index value 
        lblAssign.setText(assignMarks.get(index).toString());//set value of label lblAssign to be the element from assignMarks arraylist with the index value 
        lblExam.setText(String.valueOf(examMarks.get(index)));//set value of label lblExam to be the element from examMarks arraylist with the index value  
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3; //calculate average of the 3 marks
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_btnSearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int index = cboStudentNum.getSelectedIndex();
        lblTest.setText(testMarks.get(index).toString());
        lblAssign.setText(assignMarks.get(index).toString());
        lblExam.setText(String.valueOf(examMarks.get(index)));         
        lblTest.setText(testMarks.get(index).toString());
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3;
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int index;
        if(rbtnOne.isSelected()) //if radiobutton with first student number is selected
            index = 0;
        else if (rbtnTwo.isSelected()){//if radiobutton with second student number is selected
             index = 1;
        }else
             index = 2;//if radiobutton with 3rd student number is selected
        
        lblTest.setText(testMarks.get(index).toString());
        lblAssign.setText(assignMarks.get(index).toString());
        lblExam.setText(String.valueOf(examMarks.get(index)));         
        lblTest.setText(testMarks.get(index).toString());
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3;
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        int index = 0;
        lblTest.setText(testMarks.get(index).toString());
        lblAssign.setText(assignMarks.get(index).toString());
        lblExam.setText(String.valueOf(examMarks.get(index)));         
        lblTest.setText(testMarks.get(index).toString());
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3;
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        int index = 1;
        lblTest.setText(testMarks.get(index).toString());
        lblAssign.setText(assignMarks.get(index).toString());
        lblExam.setText(String.valueOf(examMarks.get(index)));         
        lblTest.setText(testMarks.get(index).toString());
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3;
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        int index = 2;
        lblTest.setText(testMarks.get(index).toString());
        lblAssign.setText(assignMarks.get(index).toString());
        lblExam.setText(String.valueOf(examMarks.get(index)));         
        lblTest.setText(testMarks.get(index).toString());
        double average = (testMarks.get(index) +assignMarks.get(index) +examMarks.get(index))/3;
        //find the lowest mark of the 3
        int lowest = testMarks.get(index);
        if(assignMarks.get(index) < lowest)
            lowest = assignMarks.get(index);
        if (examMarks.get(index)< lowest)
            lowest = examMarks.get(index);
        //find the hishest mark of the 3
        int highest =  testMarks.get(index);
        if(assignMarks.get(index) > highest)
            highest = assignMarks.get(index);
        if (examMarks.get(index)>highest)
            highest = examMarks.get(index);
        //display the average, highest and lowestmarks on labels
        lblAvMark.setText(String.valueOf(average));
        lblHighMark.setText(String.valueOf(highest));
        lblLowMark.setText(String.valueOf(lowest));
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentResults.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new StudentResults().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(StudentResults.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cboStudentNum;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAssign;
    private javax.swing.JLabel lblAvMark;
    private javax.swing.JLabel lblExam;
    private javax.swing.JLabel lblHighMark;
    private javax.swing.JLabel lblLowMark;
    private javax.swing.JLabel lblTest;
    private javax.swing.JList lstStudentNum;
    private javax.swing.JRadioButton rbtnOne;
    private javax.swing.JRadioButton rbtnThree;
    private javax.swing.JRadioButton rbtnTwo;
    // End of variables declaration//GEN-END:variables
}
