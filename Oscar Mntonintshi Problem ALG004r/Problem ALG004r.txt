import java.io.*;
public class ProblemALG004r{
    static void generateSquare(int n, int x)
    {
        int[][] magicSquare = new int[n][n];
        int i = n / 2;
        int j = n - 1;

        for (int num = 1; num <= n * n;) {
            if (i == -1 && j == n)
            {
                j = n - 2;
                i = 0;
            }
            else {
                if (j == n)
                    j = 0;
                if (i < 0)
                    i = n - 1;
            }
            if (magicSquare[i][j] != 0) {
                j -= 2;
                i++;
                continue;
            }
            else
                magicSquare[i][j] = num++;
            j++;
            i--;
        }
        System.out.println("The Magic Square for " + n
                           + ":");
                           int tmp = 0;
        switch (x) {
		case 0:				
			
			for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++)
                System.out.print(magicSquare[j][i] + " ");
            System.out.println();
            }
			
			break;
			
		case 1:				
			for (int row = 0; row < n; row++) {
				tmp 		= magicSquare[row][0];
				magicSquare[row][0] 	= magicSquare[row][2];
			    magicSquare[row][2] 	= tmp;
			}
			for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++)
                System.out.print(magicSquare[i][j] + " ");
            System.out.println();
            }
			break;
			
		case 2:					
			for (int col = 0; col < n; col++) {
				tmp 		= magicSquare[0][col];
				magicSquare[0][col] 	= magicSquare[2][col];
				magicSquare[2][col] 	= tmp;
			}
			for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++)
                System.out.print(magicSquare[i][j] + " ");
            System.out.println();
            }
			break;
		case 3:						// 180 rotation
			for (int col = 0; col < n; col++) {
                    for (int row = 0; row < n; row++) {
                    tmp 		= magicSquare[row][0];
                    magicSquare[row][0] 	= magicSquare[row][2];
                    magicSquare[row][2] 	= tmp;
                }
				tmp 		= magicSquare[0][col];
				magicSquare[0][col] 	= magicSquare[2][col];
				magicSquare[2][col] 	= tmp;
			}
	    	for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++)
                System.out.print(magicSquare[i][j] + " ");
            System.out.println();
            }
			break;
        }
	
        System.out.println("The sum of each row, column and diagonal is "
                   + n * (n * n + 1) / 2 + ":");
    }
     public static void main(String []args){
        int n = 5;
        int x = 0;
        generateSquare(n,x);
    }
}